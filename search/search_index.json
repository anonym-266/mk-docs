{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My MkDocs Project","text":"<p>This is an example MkDocs project using the Material theme.</p>"},{"location":"#get-started","title":"Get Started","text":"<ol> <li>Edit the <code>index.md</code> file to update the homepage content.</li> <li>Add more pages in the <code>docs/</code> directory.</li> <li>Customize your site using the <code>mkdocs.yml</code> file.</li> </ol> <p>Check out the About page to learn more.</p>"},{"location":"about/","title":"About This Project","text":"<p>This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation.</p>"},{"location":"about/#key-features","title":"Key Features","text":"<ul> <li>Write documentation in Markdown.</li> <li>Use the Material Design theme for a professional look.</li> <li>Host on GitHub Pages easily.</li> </ul>"},{"location":"virtualization/","title":"vitualization","text":""},{"location":"virtualization/#scared-of-running-something-that-may-damage-your-computer","title":"Scared of running something that may damage your computer??","text":""},{"location":"virtualization/#welcome","title":"WELCOME \ud83d\ude01","text":"<p>Today, we're learning how virtualize a container, mainly for ubuntu instances... </p> <p>### First things first</p> <p>Containerization:   \u00a0 \u00a0 Containerization is a technology that allows for the development of apps (in containers) alongside their configurations and dependencies in kinda an isolated environment to make sure they can be hosted OR they can run on any computing environment...</p> <p>Virtualization:  \u00a0 \u00a0  Virtualization is a technology that helps us emulate oses and simulate hardware devices(in a virutal machine).. to say it in a nice way, it allows us have a completely isolated computer running on our computer.. kinda, a laboratory for dangerouse experiments we wont try on our dear pcs...</p> <p>But why do so...???</p> <p>This will allow us run apps, games, and even oses without the fear of harming our pcs</p> <p>BACK TO BUISNESS... How can do that...???</p> <p>\u00a0 \u00a0 To do this, we'll need a virtual environment (preferably multipass) and a container  (preferably docker)</p> <p>Click on the links below and follow the steps to get them on your PCs\ud83d\ude42</p> <p>Download multipass</p> <p>Download docker</p> <p>\u00a0 \u00a0 Nice \ud83d\udc31... We now all have docker and multi pass installed.</p> <p>\u00a0 \u00a0 On the terminal, run the following command</p> <p>```bash  multipass launch docker --name  <pre><code>&amp;nbsp; &amp;nbsp; This creates a multipass instance named *\"&lt;instance_name&gt;\"*.. which of course you can customized to any name of your choice.\n\n&amp;nbsp; &amp;nbsp; In fact, the *\"multipass launch\"* command is used to create a multipass instance, aka ***a virtual machine***.. in our case, the vitual machine running a docker container in which we can confidently run any code without the fear of crashing our device. Having this in mind, we have to link our shell to the docker container in order to run commands from our shell on the container, to achieve this, we'll use the following command;\n\n```bash\nmultipass shell &lt;instance_name&gt;\n</code></pre> <p>Having done this, we'll have to use the following syntax to run commands that will have effect on the container in the virtual machine</p> <pre><code>multipass exec &lt;instance_name&gt; -- docker &lt;command_name&gt;\n</code></pre> <p>Where  could be any command \"ps\", \"images\" \"purge\" etc <p>But again, it can be tedious at the beginning to remember it, to resolve this, we'll create an alias</p> <p>\u00a0 \u00a0 \u00a0 \u00a0 In simple terms, an alias is used to give a more friendly name to a command we may find difficulties dealing with..</p> <p>\u00a0 \u00a0 To achieve this, we'll use the following syntax...</p> <pre><code>alias &lt;desired_command_name&gt;=\"&lt;command_we_find_difficulties_dealing_with&gt;\"\n</code></pre> <p>\u00a0 \u00a0 In our case;</p> <pre><code>alias docker=\"multipass exec &lt;instance_name&gt; -- docker\"\n</code></pre> <p>Hence forth, anytime we'll run the command \"docker\" the command \"multipass exec docker-vm -- docker\" will be executed in the background so we wont have to remember the later syntax \ud83d\ude0c\ud83d\ude0c\ud83d\ude42\u200d\u2195\ufe0f </p> <p> **ZEN.. RIGHT.. \ud83d\udc4d** <p>"}]}